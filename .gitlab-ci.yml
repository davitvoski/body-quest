# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
image: node:latest

stages: 
    - test
    - build
    - deploy

build-frontend:
    stage: build
    only:
        - main
        - staging
        - merge_requests
    cache:
        key:
            prefix: 'frontend'
            files: 
                - 'client/package-lock.json'
        paths:
            - 'client/node_modules/'
    script:
        - cd client && npm install && CI=false npm run build
    artifacts:
        expire_in: 12h
        when: on_success
        paths:
            - client/build
            - client/node_modules

build-backend:
    stage: build
    only:
        - main
        - staging
        - merge_requests
    cache:
        key:
            prefix: 'server'
            files:
                - 'server/package-lock.json'
        paths:
            - 'server/node_modules'
    script:
        - cd server && npm install && CI=false npm run build
    artifacts:
        expire_in: 12h
        when: on_success
        paths:
            - server/node_modules
            - server/build
     
test:
    stage: test
    only:
        - main
        - staging
        - branches
        - merge_requests
    before_script:
        - echo SECRET=das21dae123dc1 >> .env
        - echo NEED_GOOGLE=true >> .env
        - mv .env ./server
    script:
        - cd server && npm install && npm run test
    artifacts:
        expire_in: 1h
        when: on_failure
        paths:
            - test.zip

deploy:
    stage: deploy
    image: mcr.microsoft.com/azure-cli
    dependencies:
        - build-frontend
        - build-backend
    only:
        - main
    before_script:
        - "az login --allow-no-subscriptions --service-principal -u $AZ_SP_ID -p $AZ_SP_SECRET --tenant $AZ_TENANT"
    script:
        # - zip -r deploy.zip client/build ./server ./package.json ./server/node_modules ./client/node_modules
        - zip -r deploy.zip ./package.json ./client/node_modules ./client/build ./client/package.json ./server/build ./server/node_modules ./server/package.json 1> /dev/null
        - "az webapp config appsettings set --resource-group $RESOURCE_GROUP_NAME --name $APP_NAME --settings WEBSITE_RUN_FROM_PACKAGE='1' ATLAS_URI=$ATLAS_URI DATABASE_NAME=$DATABASE_NAME NEED_GOOGLE=$NEED_GOOGLE SECRET=$SECRET VITE_GOOGLE_CLIENT_ID=$VITE_GOOGLE_CLIENT_ID GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID"
        - "az webapp deployment source config-zip --resource-group $RESOURCE_GROUP_NAME --name $APP_NAME --src deploy.zip"
    artifacts:
        expire_in: 1h
        when: on_success
        paths:
            - deploy.zip
